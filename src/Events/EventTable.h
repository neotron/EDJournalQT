//
//  Copyright (C) 2018-  David Hedbor <neotron@gmail.com>
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

#pragma once
namespace Journal {
    QMap<QString, EventType>
        Event::s_eventLookupMap = {{ "fileheader",           EventTypeFileHeader },
                                   { "clearsavedgame",       EventTypeClearSavedGame },
                                   { "newcommander",         EventTypeNewCommander },
                                   { "loadgame",             EventTypeLoadGame },
                                   { "progress",             EventTypeProgress },
                                   { "rank",                 EventTypeRank },
                                   { "docked",               EventTypeDocked },
                                   { "dockingcancelled",     EventTypeDockingCancelled },
                                   { "dockingdenied",        EventTypeDockingDenied },
                                   { "dockinggranted",       EventTypeDockingGranted },
                                   { "dockingrequested",     EventTypeDockingRequested },
                                   { "dockingtimeout",       EventTypeDockingTimeout },
                                   { "fsdjump",              EventTypeFSDJump },
                                   { "liftoff",              EventTypeLiftoff },
                                   { "location",             EventTypeLocation },
                                   { "supercruiseentry",     EventTypeSupercruiseEntry },
                                   { "supercruiseexit",      EventTypeSupercruiseExit },
                                   { "touchdown",            EventTypeTouchdown },
                                   { "undocked",             EventTypeUndocked },
                                   { "bounty",               EventTypeBounty },
                                   { "capshipbond",          EventTypeCapShipBond },
                                   { "died",                 EventTypeDied },
                                   { "escapeinterdiction",   EventTypeEscapeInterdiction },
                                   { "factionkillbond",      EventTypeFactionKillBond },
                                   { "heatdamage",           EventTypeHeatDamage },
                                   { "heatwarning",          EventTypeHeatWarning },
                                   { "hulldamage",           EventTypeHullDamage },
                                   { "interdicted",          EventTypeInterdicted },
                                   { "interdiction",         EventTypeInterdiction },
                                   { "pvpkill",              EventTypePVPKill },
                                   { "shieldstate",          EventTypeShieldState },
                                   { "scan",                 EventTypeScan },
                                   { "materialcollected",    EventTypeMaterialCollected },
                                   { "materialdiscarded",    EventTypeMaterialDiscarded },
                                   { "materialdiscovered",   EventTypeMaterialDiscovered },
                                   { "buyexplorationdata",   EventTypeBuyExplorationData },
                                   { "sellexplorationdata",  EventTypeSellExplorationData },
                                   { "screenshot",           EventTypeScreenshot },
                                   { "buytradedata",         EventTypeBuyTradeData },
                                   { "collectcargo",         EventTypeCollectCargo },
                                   { "ejectcargo",           EventTypeEjectCargo },
                                   { "marketbuy",            EventTypeMarketBuy },
                                   { "marketsell",           EventTypeMarketSell },
                                   { "miningrefined",        EventTypeMiningRefined },
                                   { "buyammo",              EventTypeBuyAmmo },
                                   { "buydrones",            EventTypeBuyDrones },
                                   { "communitygoaldiscard", EventTypeCommunityGoalDiscard },
                                   { "communitygoaljoin",    EventTypeCommunityGoalJoin },
                                   { "communitygoalreward",  EventTypeCommunityGoalReward },
                                   { "crewassign",           EventTypeCrewAssign },
                                   { "crewfire",             EventTypeCrewFire },
                                   { "crewhire",             EventTypeCrewHire },
                                   { "engineerapply",        EventTypeEngineerApply },
                                   { "engineercraft",        EventTypeEngineerCraft },
                                   { "engineerprogress",     EventTypeEngineerProgress },
                                   { "fetchremotemodule",    EventTypeFetchRemoteModule },
                                   { "massmodulestore",      EventTypeMassModuleStore },
                                   { "missionabandoned",     EventTypeMissionAbandoned },
                                   { "missionaccepted",      EventTypeMissionAccepted },
                                   { "missioncompleted",     EventTypeMissionCompleted },
                                   { "missionfailed",        EventTypeMissionFailed },
                                   { "modulebuy",            EventTypeModuleBuy },
                                   { "moduleretrieve",       EventTypeModuleRetrieve },
                                   { "approachsettlement",   EventTypeApproachSettlement },
                                   { "cockpitbreached",      EventTypeCockpitBreached },
                                   { "commitcrime",          EventTypeCommitCrime },
                                   { "continued",            EventTypeContinued },
                                   { "datascanned",          EventTypeDataScanned },
                                   { "datalinkscan",         EventTypeDatalinkScan },
                                   { "datalinkvoucher",      EventTypeDatalinkVoucher },
                                   { "dockfighter",          EventTypeDockFighter },
                                   { "docksrv",              EventTypeDockSRV },
                                   { "fuelscoop",            EventTypeFuelScoop },
                                   { "jetconeboost",         EventTypeJetConeBoost },
                                   { "jetconedamage",        EventTypeJetConeDamage },
                                   { "launchfighter",        EventTypeLaunchFighter },
                                   { "launchsrv",            EventTypeLaunchSRV },
                                   { "modulesell",           EventTypeModuleSell },
                                   { "modulesellremote",     EventTypeModuleSellRemote },
                                   { "modulestore",          EventTypeModuleStore },
                                   { "moduleswap",           EventTypeModuleSwap },
                                   { "payfines",             EventTypePayFines },
                                   { "paylegacyfines",       EventTypePayLegacyFines },
                                   { "powerplaycollect",     EventTypePowerplayCollect },
                                   { "powerplaydefect",      EventTypePowerplayDefect },
                                   { "powerplaydeliver",     EventTypePowerplayDeliver },
                                   { "powerplayfasttrack",   EventTypePowerplayFastTrack },
                                   { "powerplayjoin",        EventTypePowerplayJoin },
                                   { "powerplayleave",       EventTypePowerplayLeave },
                                   { "powerplaysalary",      EventTypePowerplaySalary },
                                   { "powerplayvote",        EventTypePowerplayVote },
                                   { "powerplayvoucher",     EventTypePowerplayVoucher },
                                   { "promotion",            EventTypePromotion },
                                   { "rebootrepair",         EventTypeRebootRepair },
                                   { "receivetext",          EventTypeReceiveText },
                                   { "redeemvoucher",        EventTypeRedeemVoucher },
                                   { "refuelall",            EventTypeRefuelAll },
                                   { "refuelpartial",        EventTypeRefuelPartial },
                                   { "repair",               EventTypeRepair },
                                   { "repairall",            EventTypeRepairAll },
                                   { "restockvehicle",       EventTypeRestockVehicle },
                                   { "resurrect",            EventTypeResurrect },
                                   { "scientificresearch",   EventTypeScientificResearch },
                                   { "selfdestruct",         EventTypeSelfDestruct },
                                   { "selldrones",           EventTypeSellDrones },
                                   { "sendtext",             EventTypeSendText },
                                   { "shipyardbuy",          EventTypeShipyardBuy },
                                   { "shipyardnew",          EventTypeShipyardNew },
                                   { "shipyardsell",         EventTypeShipyardSell },
                                   { "shipyardswap",         EventTypeShipyardSwap },
                                   { "shipyardtransfer",     EventTypeShipyardTransfer },
                                   { "synthesis",            EventTypeSynthesis },
                                   { "ussdrop",              EventTypeUSSDrop },
                                   { "vehicleswitch",        EventTypeVehicleSwitch },
                                   { "wingadd",              EventTypeWingAdd },
                                   { "wingjoin",             EventTypeWingJoin },
                                   { "wingleave",            EventTypeWingLeave },
                                   { "systemsshutdown",      EventTypeSystemsShutdown },
                                   { "cargo",                EventTypeCargo },
                                   { "loadout",              EventTypeLoadout },
                                   { "scanned",              EventTypeScanned },
                                   { "startjump",            EventTypeStartJump },
                                   { "materials",            EventTypeMaterials },
                                   { "setusershipname",      EventTypeSetUserShipName },
                                   { "changecrewrole",       EventTypeChangeCrewRole },
                                   { "crewmemberjoins",      EventTypeCrewMemberJoins },
                                   { "crewmemberquits",      EventTypeCrewMemberQuits },
                                   { "crewmemberrolechange", EventTypeCrewMemberRoleChange },
                                   { "endcrewsession",       EventTypeEndCrewSession },
                                   { "joinacrew",            EventTypeJoinACrew },
                                   { "quitacrew",            EventTypeQuitACrew },
                                   { "music",                EventTypeMusic },
                                   { "friends",              EventTypeFriends },
                                   { "passengers",           EventTypePassengers },
                                   { "winginvite",           EventTypeWingInvite },
                                   { "navbeaconscan",        EventTypeNavBeaconScan },
                                   { "missionredirected",    EventTypeMissionRedirected },
                                   { "engineercontribution", EventTypeEngineerContribution },
                                   { "communitygoal",        EventTypeCommunityGoal },
                                   { "afmurepairs",          EventTypeAFMURepairs },
    };
}
